@page
@model DemoDatabaseCompare.Web.Pages.StudentsModel
@{
    ViewData["Title"] = "DBMS Insert Performance Demo";
}
<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css" rel="stylesheet">
<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
<style>
    body {
        background: linear-gradient(120deg, #e0eafc 0%, #cfdef3 100%);
        min-height: 100vh;
    }
    .dashboard-card {
        box-shadow: 0 2px 12px rgba(0,0,0,0.08);
        border-radius: 1rem;
        margin-bottom: 2rem;
    }
    .db-label {
        font-weight: 600;
        font-size: 1.1rem;
    }
    .result-time {
        font-size: 1.2rem;
        font-weight: 500;
    }
    .record-badge {
        font-size: 1rem;
        margin-left: 0.5rem;
    }
    .chart-container {
        min-height: 350px;
    }
</style>
<div class="container py-4">
    <h1 class="text-center mb-4">DBMS Insert Performance Demo</h1>
    <div class="row mb-4 g-3 justify-content-center">
        <div class="col-auto">
            <input id="insertCount" class="form-control form-control-lg" type="number" min="1" value="100" placeholder="Số lượng record...">
        </div>
        <div class="col-auto">
            <button id="insertSqlBtn" class="btn btn-primary btn-lg">Insert SQL Server</button>
        </div>
        <div class="col-auto">
            <button id="insertMongoBtn" class="btn btn-success btn-lg">Insert MongoDB</button>
        </div>
        <div class="col-auto">
            <button id="insertCasBtn" class="btn btn-warning btn-lg">Insert Cassandra</button>
        </div>
        <div class="col-auto">
            <button id="insertScyllaBtn" class="btn btn-dark btn-lg">Insert ScyllaDB</button>
        </div>
        <div class="col-auto">
            <button id="runAllBtn" class="btn btn-outline-secondary btn-lg">Chạy tất cả mức</button>
        </div>
        <div class="col-auto">
            <button id="compareBtn" class="btn btn-info btn-lg">So sánh kết quả</button>
        </div>
    </div>
    <div class="row row-cols-1 row-cols-md-2 row-cols-lg-4 g-4 mb-4" id="resultsRow">
        <!-- Cards for each DB will be injected here -->
    </div>
    <div class="row">
        <div class="col-12">
            <div class="card dashboard-card">
                <div class="card-body">
                    <h5 class="card-title">Kết quả chi tiết</h5>
                    <div class="table-responsive">
                        <table class="table table-bordered align-middle text-center" id="resultsTable">
                            <thead class="table-light">
                                <tr>
                                    <th>DBMS</th>
                                    <th>Số lượng record</th>
                                    <th>Thời gian Insert (ms)</th>
                                </tr>
                            </thead>
                            <tbody>
                                <!-- Results rows -->
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <!-- Modal for comparison chart -->
    <div class="modal fade" id="compareModal" tabindex="-1" aria-labelledby="compareModalLabel" aria-hidden="true">
      <div class="modal-dialog modal-lg modal-dialog-centered">
        <div class="modal-content">
          <div class="modal-header">
            <h5 class="modal-title" id="compareModalLabel">So sánh hiệu suất Insert giữa các DBMS</h5>
            <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
          </div>
          <div class="modal-body">
            <div class="chart-container">
                <canvas id="compareChart"></canvas>
            </div>
          </div>
        </div>
      </div>
    </div>
</div>
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.bundle.min.js"></script>
<script>
const dbList = [
    { key: 'sql', label: 'SQL Server', color: '#1976d2', api: '/api/sql/students/generate/' },
    { key: 'mongo', label: 'MongoDB', color: '#43a047', api: '/api/mongodb/students/generate/' },
    { key: 'cassandra', label: 'Cassandra', color: '#ffa000', api: '/api/cassandra/students/generate/' },
    { key: 'scylla', label: 'ScyllaDB', color: '#212529', api: '/api/scylla/students/generate/' }
];
//const testLevels = [ 1000000];
const testLevels = [10, 100, 1000, 10000, 100000];
let results = {};
let compareChart = null;

function renderCards() {
    const row = document.getElementById('resultsRow');
    row.innerHTML = dbList.map(db => `
        <div class="col">
            <div class="card dashboard-card h-100 border-0">
                <div class="card-body text-center">
                    <div class="db-label mb-2" style="color:${db.color}">${db.label}</div>
                    <div id="card-${db.key}" class="result-time">-</div>
                </div>
            </div>
        </div>
    `).join('');
}

function renderTable() {
    const tbody = document.querySelector('#resultsTable tbody');
    tbody.innerHTML = '';
    dbList.forEach(db => {
        if (results[db.key]) {
            Object.entries(results[db.key]).forEach(([count, ms]) => {
                tbody.innerHTML += `<tr>
                    <td style="color:${db.color};font-weight:600">${db.label}</td>
                    <td>${count.toLocaleString()}</td>
                    <td>${ms ? ms.toLocaleString() : '-'} ms</td>
                </tr>`;
            });
        }
    });
}

function updateCard(dbKey, count, ms) {
    const el = document.getElementById(`card-${dbKey}`);
    if (el) {
        el.innerHTML = `<span>${ms ? ms.toLocaleString() : '-'} ms</span><span class="badge bg-secondary record-badge">${count.toLocaleString()}</span>`;
    }
}

function showToast(msg, type = 'info') {
    const toast = document.createElement('div');
    toast.className = `toast align-items-center text-bg-${type} border-0 position-fixed bottom-0 end-0 m-4`;
    toast.role = 'alert';
    toast.innerHTML = `<div class="d-flex"><div class="toast-body">${msg}</div><button type="button" class="btn-close btn-close-white me-2 m-auto" data-bs-dismiss="toast"></button></div>`;
    document.body.appendChild(toast);
    const bsToast = new bootstrap.Toast(toast, { delay: 2500 });
    bsToast.show();
    toast.addEventListener('hidden.bs.toast', () => toast.remove());
}

function runInsert(dbKey, count) {
    const db = dbList.find(d => d.key === dbKey);
    if (!db) return;
    const url = db.api + count;
    const t0 = performance.now();
    updateCard(dbKey, count, '...');
    return fetch(url, { method: 'GET' })
        .then(res => res.json())
        .then(data => {
            const ms = data.elapsedMilliseconds || Math.round(performance.now() - t0);
            if (!results[dbKey]) results[dbKey] = {};
            results[dbKey][count] = ms;
            updateCard(dbKey, count, ms);
            renderTable();
            showToast(`Insert ${count} record vào ${db.label}: ${ms} ms`, 'success');
        })
        .catch(() => {
            updateCard(dbKey, count, '-');
            showToast(`Insert thất bại cho ${db.label}`, 'danger');
        });
}

document.getElementById('insertSqlBtn').onclick = () => {
    const count = parseInt(document.getElementById('insertCount').value) || 1;
    runInsert('sql', count);
};
document.getElementById('insertMongoBtn').onclick = () => {
    const count = parseInt(document.getElementById('insertCount').value) || 1;
    runInsert('mongo', count);
};
document.getElementById('insertCasBtn').onclick = () => {
    const count = parseInt(document.getElementById('insertCount').value) || 1;
    runInsert('cassandra', count);
};
document.getElementById('insertScyllaBtn').onclick = () => {
    const count = parseInt(document.getElementById('insertCount').value) || 1;
    runInsert('scylla', count);
};

document.getElementById('runAllBtn').onclick = async () => {
    for (let count of testLevels) {
        for (let db of dbList) {
            await runInsert(db.key, count);
            await new Promise(r => setTimeout(r, 400));
        }
    }
    showToast('Đã chạy xong tất cả các mức!', 'primary');
};

document.getElementById('compareBtn').onclick = () => {
    const modal = new bootstrap.Modal(document.getElementById('compareModal'));
    renderCompareChart();
    modal.show();
};

function renderCompareChart() {
    const ctx = document.getElementById('compareChart').getContext('2d');
    const labels = testLevels.map(c => c.toLocaleString());
    const datasets = dbList.map(db => ({
        label: db.label,
        data: labels.map(lvl => results[db.key] && results[db.key][parseInt(lvl.replace(/,/g,''))] ? results[db.key][parseInt(lvl.replace(/,/g,''))] : null),
        backgroundColor: db.color
    }));
    console.log('labels:', labels);
    console.log('datasets:', datasets);
    if (compareChart) compareChart.destroy();
    compareChart = new Chart(ctx, {
        type: 'bar',
        data: { labels, datasets },
        options: {
            responsive: true,
            plugins: {
                legend: { position: 'top' },
                title: { display: true, text: 'So sánh thời gian Insert (ms) theo số lượng record' }
            },
            scales: {
                y: { beginAtZero: true, title: { display: true, text: 'Thời gian (ms)' } }
            }
        }
    });
}

window.onload = function() {
    renderCards();
    renderTable();
};
</script> 